{"pages":[],"posts":[{"title":"Javascript代码简洁之道","text":"变量 用有意义的单词命名变量 保持统一可能同一个项目对于湖区用户信息会有三个不同的命名，应该保持统一，如果不知道要如何取名，可以去codelf搜索，看别人如何取名。 每个常量都该命名可以使用Eslint或者buddy.js监测代码未命名的常量. 可描述通过一个变量生成了一个新变量，也需要为这个新变量命名，也就是说每个变量当看到他第一眼的时候就知道他是要干什么。 直接了当当参数传到function中去的时候，使参数语义化 避免无意义的前缀当一个obj被命名成car时，其中所属的属性名硬简洁扼要。 使用默认值（给function的参数设置一个默认值） 函数 参数越少越好如果参数超过两个，就使用结构语法，不用考虑参数的顺序问题 只做一件事所有的function功能性要单一 顾名思义，函数名语义化 只需要一层抽象层，function在jog你不要嵌套太多循环，尽量使用参数解决循环嵌套的问题 删除重复代码同一个功能，由于一两个不同点写两个基本相同的function，这是需要抽象思维对代码进行整合，而抽象的过程就需要遵循SOLID原则 对象设置默认属性 不要穿flag参数，这样就违背了一个函数干一件事的原则 避免副作用（1）：所谓副作用就比如修改全局变量或者对文件进行IO操作，这个IO操作应该在唯一的地方处理。副作用三大天坑：随意修改可变数据类型，随意分享没有数据结构的状态，没有再同意的地方处理副作用。 避免副作用（2）：文章摘自微信公众号Javascript–js代码简洁之道","link":"/2017/05/04/Javascript代码简洁之道/"},{"title":"ES6语法总结","text":"es61.let const var 使用let声明的变量只在块级作用域起作用，适合在for循环中使用，不会出现变量提升的现象，同一代码块内，不可重复声明相同是变量，不可重复声明函数内的参数 使用const只能声明常量，这个常量一旦被声明，就不会被修改，也只在会计作用域中使用。 2.es6语法快速兼容浏览器使用转换工具Babel 步骤1：制作ES6文件 步骤2：测试ES6新特性在各大浏览器上的兼容性 步骤3：安装node（如已安装请省略） 步骤4：监测node是否安装成功（如已安装请省略） 步骤5：使用npm安装Babel npm install babel-core@5 步骤6：使用Babel,在es6新语法使用的上方引入browser.min.js,并把使用ES6新语法的scrip标签type设置为“text/babel” 步骤7：运行ES6代在各大浏览器上，兼容正常 注：目前没有任何一种工具可以完全编译ES6语法，所以使用新特性时要谨慎。 2.es6语法快速兼容浏览器","link":"/2017/01/08/es6语法总结/"},{"title":"js基础复习总结","text":"DOM操作1.id2.classname","link":"/2016/01/08/js基础复习总结/"}],"tags":[{"name":"js","slug":"js","link":"/tags/js/"},{"name":"ES6","slug":"ES6","link":"/tags/ES6/"}],"categories":[]}